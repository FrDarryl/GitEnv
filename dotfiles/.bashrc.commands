#!/bin/bash
[ -e "${HOME}/Program_Files/Adobe/Reader 11.0/Reader/AcroRd32.exe" ] && alias acroread="${HOME}/Program_Files/Adobe/Reader\ 11.0/Reader/AcroRd32.exe"
aptin()
{
    echo -e "\n\n\e[00;31mRunning apt-get -f install\e[00m\n\n" &&
    sudo apt-get -f install &&
    echo -e "\n\n\e[00;31mRunning dpkg --configure -a\e\e[00m\n\n" &&
    sudo dpkg --configure -a &&
    echo -e "\n\n\e[00;31mRunning apt-get -y update\e\e[00m\n\n" &&
    sudo apt-get -y update &&
    echo -e "\n\n\e[00;31mRunning apt-get install\e[00m\n\n" &&
    sudo apt-get install "$@" &&
    echo -e "\n\n\e[00;31mRunning apt-get -y autoremove\e[00m\n\n" &&
    sudo apt-get -y autoremove &&
    echo -e "\n\n\e[00;31mRunning apt-get -y clean\e[00m\n\n" &&
    sudo apt-get clean;
}
aptdp()
{
    echo -e "\n\n\e[00;31mRunning apt-rdepends\e[00m\n\n" &&
    sudo apt-rdepends "$@"
}
aptls()
{
    echo -e "\n\n\e[00;31mRunning dpkg --get-selections\e[00m\n\n" &&
    sudo dpkg --get-selections | grep "${1}.+\sinstall$"
}
aptrm()
{
    sudo apt-get remove "$@" &&
    echo -e "\n\n\e[00;31mRunning apt-get -f install\e[00m\n\n" &&
    sudo apt-get -y autoremove &&
    echo -e "\n\n\e[00;31mRunning apt-get -y clean\e[00m\n\n" &&
    sudo apt-get clean;
}
alias aptcs="apt-cache search"
aptup()
{
    echo -e "\n\n\e[00;31mRunning apt-get -f install\e[00m\n\n" &&
    sudo apt-get -f install &&
    echo -e "\n\n\e[00;31mRunning dpkg --configure -a\e[00m\n\n" &&
    sudo dpkg --configure -a &&
    echo -e "\n\n\e[00;31mRunning apt-get -y update\e[00m\n\n" &&
    sudo apt-get -y update &&
    echo -e "\n\n\e[00;31mRunning apt-get -y upgrade\e[00m\n\n" &&
    sudo apt-get -y upgrade &&
    echo -e "\n\n\e[00;31mRunning apt-get -y dist-upgrade\e[00m\n\n" &&
    sudo apt-get -y dist-upgrade &&
    echo -e "\n\n\e[00;31mRunning apt-get -y autoremove\e[00m\n\n" &&
    sudo apt-get -y autoremove &&
    echo -e "\n\n\e[00;31mRunning apt-get -y clean\e[00m\n\n" &&
    sudo apt-get clean;
}
alias au="echo \"${@}\" >> _urls"
alias c="cd;clear"
alias cd="export PWDP=${PWD}; \cd"
alias cdp="cd ${PWD_PREVIOUS:=~}"
alias cg="/usr/bin/google contacts list --fields=name,email,phone" # http://code.google.com/p/googlecl/wiki/ExampleScripts#Contacts
alias cpanm="sudo cpanm --verbose" # Depends: sudo apt-get install build-essential
alias dcsnerdtree="display ${DROPBOX_HOME}/images/cheatsheets/NERDTreeCheatsheet.jpg &"
alias dcsyakuake="display ${DROPBOX_HOME}/images/cheatsheets/YakuakeCheatsheet.jpg &"
debin()
{
    echo -e "\n\n\e[00;31mRunning apt-get -f install\e[00m\n\n" &&
    sudo apt-get -f install &&
    echo -e "\n\n\e[00;31mRunning dpkg --configure -a\e\e[00m\n\n" &&
    sudo dpkg --configure -a &&
    echo -e "\n\n\e[00;31mRunning apt-get -y update\e\e[00m\n\n" &&
    sudo dpkg -i "$@" &&
    echo -e "\n\n\e[00;31mRunning dpkg --get-selections redirecting to ${DROPBOX_HOME}/etc/apt/dpkg_selections.${HOSTNAME}\e[00m\n\n" &&
    sudo dpkg --get-selections >| ${DROPBOX_HOME}/etc/apt/dpkg_selections.${HOSTNAME}
}
debls()
{
    for file in /var/lib/apt/lists/*Packages; do echo "${file}" && grep -H ^Package "${file}" ; done | grep "${1}"
}
detox() {
    for file_name in "${@}";
    do
        new_file_name="$(echo "${file_name}" | sed 's/ /_/g' | sed 's/[^0-9a-zA-Z_.]//g' | tr [A-Z] [a-z])";
        [ "${new_file_name}" != "${file_name}" ] && mv "${file_name}" "${new_file_name}"
    done
}
alias di="/usr/bin/display"
alias dl="wget"
alias docx2txt=docx2txt.pl
alias du="du -h"
alias evcf="e ${DROPBOX_HOME}/data/pim/contacts.vcf"
alias e="vim.sh"
alias ecss="${DROPBOX_HOME}/apps/java/juststyle.jar"
alias et="e /tmp/temp"
alias fa="find . -printf '%CY-%Cm-%Cd_%CH:%CM %p %l\n'"
alias ff="firefox-trunk&"
finddup() {
    cksum ./* | awk ' {
                          if ( $2 in arr ) {
                              print "duplicates ", $3, arr[$2], "duplicate filesize = ", $2
                          } else {
                              arr[$2]=$3
                          }
                      }'
}
alias fln="find $PWD -type l -exec ls -o {} \;"
alias flnd="find ~ -type l -exec ls -o {} \; | grep dropbox >| ${DROPBOX_HOME}/symlinks.dropbox.${USER}@${HOSTNAME}.txt"
alias fp="firefox-trunk --private&"
alias gemup="gem update && gem cleanup"
gc() { grep -i "$@" ~/Dropbox/data/pim/*_contacts.tsv ; }
getRSVCE() {
    get_biblegateway_text.pl -u -t RSVCE $(get_universalis_refs.pl -l m -d $1 2> /dev/null)
}
gf() {
    find $1 | xargs grep -si $2 | grep -v cache
}
gfl() {
    find $1 | xargs grep -sil $2 | grep -v cache
}
alias gh="history | grep -i"
alias girb="rvm use 2.0.0 && google-api oauth-2-login --client-id='427178904171.apps.googleusercontent.com' --client-secret='mUlrrm1VBFs3mE2oWgVyAbF2' --scope='https://www.googleapis.com/auth/plus.me' && google-api irb"
git_pull() {
    if [ -z $1 ];
    then
        echo "Usage: ${FUNCNAME[0]} RepoName"
    else
        cd ~/apps/${1}
        git pull origin master
        git submodule init
        git submodule update
    fi
}
git_push() {
    if [ -z $1 ];
    then
        echo "Usage: ${FUNCNAME[0]} RepoName"
    else
        cd ~/apps/${1}
        git add .
        git commit -m "`date`"
        git push origin master
    fi
}
gitenv_add_vim_package() {
    if [ -z $2 ];
    then
        echo "Usage: ${FUNCNAME[0]} RepoUserID RepoName"
    else
        echo "Adding pathogen package https://github.com/${1}/${2}.git as .vim/bundle/${2}"
        cd ~/gitenv
        git submodule add https://github.com/${1}/${2}.git dotfiles/.vim/bundle/${2}
        git add .
        git commit -m "`date`"
        git push origin master
    fi
}
gp() { ps -efa | grep -i "$@" | grep -v grep | perl -pe's/\s{2,}/ /g' | cut -d ' ' -f 2 ; }
alias grep="/bin/grep -E --color=auto"
alias hi=history
alias k9="kill -9"
alias kc="xev | grep -A2 --line-buffered '^KeyRelease' | sed -n '/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p'"
kn() {
    for pid in `np`;
    do
        kill -9 $pid
    done
}
ks() {
    kbuildsycoca4 > /dev/null 2>&1
    kquitapp "$@" > /dev/null 2>&1
    kstart "$@" > /dev/null 2>&1
}
alias ld="ls | grep \/"
alias less="less -r"
alias ll="/bin/ls --color=auto -Ahlp --time-style=long-iso"
alias lld="/bin/ls --color=auto -Ahlp --time-style=long-iso | grep ^d"
alias lll="/bin/ls --color=auto -Ahlp --time-style=long-iso | grep ^l"
alias llt="/bin/ls --color=auto -Ahlp --time-style=long-iso | head"
alias ls="/bin/ls --color=auto -Ap"
alias lsi="/bin/ls --color=auto -1Aip"
alias lt="/bin/ls --color=auto -Ahlpt --time-style=long-iso | head -20"
lu() { sdcv $1 | less ; }
alias lynx="/usr/bin/lynx -accept_all_cookies"
md() { pandoc -s -f markdown -t man $1 | man -l - ; }
alias more="less -r"
mp() { mplayer -loop 0 "$@" > /dev/null 2>&1 ; }
alias mv="mv -i"
mvi() { find . -inum $1 -exec mv -i {} $2 \; ; }
alias myip="w3m -dump http://echoip.com/"
alias nc="nesh -c"
alias npmin="sudo npm -g install"
npmup() {
    set -e
    set -x

    for package in $(npm -g outdated --parseable --depth=0 | cut -d: -f3)
    do
        sudo npm -g install "$package"
    done
}
alias ns="netstat -tulpn"
nvmin() {
    if [ -z "${NODE_VERSION_DEFAULT}" ]; then
        echo "envar NODE_VERSION_DEFAULT not set"
        return
    fi
    nvm use "${NODE_VERSION_DEFAULT}"
    n=$(which node);
    n=${n%/bin/node};
    chmod -R 755 $n/bin/*;
    sudo cp -r $n/{bin,lib,share} /usr/local
}
opr() { ${PDF_READER_APP} "${@}"; }
oss() { ${SPREADSHEET_APP} "${@}"; }
owp() { ${WORD_PROCESSOR_APP} "${@}"; }
alias plasma_restart="kbuildsycoca4 && kquitapp plasma-desktop && kstart plasma-desktop"
alias pp="tr -cd '\12\40-\176' | a2ps --columns=1 --font='12' --portrait"
alias pslpr="perl -i.bak -pe 's/[^[:ascii:]]//g' | textfmt -s A4 -p 12 | lpr -P HP_LaserJet_1100"
alias pwget="pass"
pwjson() {
    echo "{ \"tld-passwords\": {";
    for tld in `ls -1 ${DROPBOX_HOME}/data/.password-store/*.gpg | perl -pe 's/^.+\/(.+)\.gpg/$1/'`;
    do
        echo "    \"${tld}\": \"$(pass $tld)\",";
    done;
    echo "    }";
    echo "}";
}
alias pwset="pass generate -n"
rename() {
    for file_name in *;
    do
        new_file_name=$(echo "${file_name}" | sed "s/$1/$2/g");
        [ "${new_file_name}" != "${file_name}" ] && mv -i "${file_name}" "${new_file_name}"
    done
}
alias rm="rm -i"
rmi() { find . -maxdepth 1 -inum $1 -exec rm -i {} \; ; }
alias rms="/usr/bin/shred -uvz"
alias sa="sudo apt-get"
sbl() { source ~/.bash_login; }
sblv() { set -o verbose; source ~/.bash_login; set +o verbose; }
setPrompt() {
	# enable color support of ls and also add handy aliases
	if [ -x /usr/bin/dircolors ] && [ "${TERM}" != "dumb" ]; then

		# Attribute codes:
		# 00=none 01=bold 04=underscore 05=blink 07=reverse 08=concealed

		# Text color codes:
		# 30=black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white

		# Background color codes:
		# 40=black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=whitespace

		# If id command returns zero, you've root access.
		if [ $(id -u) -eq 0 ];
		then
#            PS1='\[\e[01;04;31m\]\!:$(date +%Y%m%dT%H%M%S):\u@\h:\w/\[\e[00m\]\[\e[01;31m\]\n#\[\e[00m\] '
            PS1='\[\e[01;04;31m\]\!:\u@\h:\w/\[\e[00m\]\[\e[01;31m\]\n#\[\e[00m\] '
		else
            PS1='\[\e[01;04;36m\]\!:\u@\h:\w/\[\e[00m\]\[\e[01;36m\]\n#\[\e[00m\] '
#            PS1='\[\e[01;04;36m\]\!:$(date +%Y%m%dT%H%M%S):\u@\h:\w/\[\e[00m\]\[\e[01;36m\]\n#\[\e[00m\] '
		fi
	fi
}
#alias sftpsony="sftp -v -p 2222 sftp://root@192.168.0.7"
sos() { /usr/bin/nm -D $@ | cut -d' ' -f3 ; }
#alias sshec2="ssh -l ubuntu -i ${EC2_HOME}/dlcjordankey.pem -p 22 ec2-54-216-219-132.eu-west-1.compute.amazonaws.com"
alias sshme="ssh frdarryl@ifordparish.org.uk"
#alias sshsony="ssh -v -p 2222 sftp://root@192.168.0.2"
#alias ssr="/usr/bin/simplescreenrecorder&"
alias sumfile="awk '{ sum += $1 } END { print sum }'"
alias ta="tail /var/log/apache2/error.log"
alias unidecode="perl -C -MText::Unidecode -n -i -e'print unidecode( \$_)'"
alias useradd="adduser"
#alias vascii="${WEB_BROWSER} http://ascii.cl/htmlcodes.htm"
#alias vcard_find_missing_end="pcregrep -nM '^[^E].*$\nBEGIN:VCARD'"
vlcr() {
    vlc $1 --start-time $2 --stop-time $3 --repeat
}
alias vd="youtube-dl -o \"%(title)s-%(id)s.%(ext)s\""
#alias vfb="${WEB_BROWSER} http://www.facebook.com/revdjordan"
#alias vgcal="${WEB_BROWSER} https://www.google.com/calendar/render?tab=mc&mode=day"
#alias vgcon="${WEB_BROWSER} https://www.google.com/contacts/#contacts"
#alias vgdoc="${WEB_BROWSER} https://docs.google.com/?tab=mo&authuser=0&pli=1#home"
#alias vgloom="${WEB_BROWSER} http://www.bbc.co.uk/weather/2655095/extended"
#alias vgmail="${WEB_BROWSER} https://mail.google.com/mail/?shva=1#inbox"
#alias vgmap="${WEB_BROWSER} http://g.co/maps/e7cwm"
#alias vhmd="${WEB_BROWSER} https://docs.google.com/spreadsheet/ccc?key=0AjHMvrmueFDwdEhVSG56Q2ZlRTJFUFdiell0ekhKQ1E"
alias vi="vim"
#alias vvmailhelp="w3m -dump http://danielchoi.com/software/vmail.html | less"
#vp() { tabbed=$(tabbed -d); vimprobable2 -e $tabbed "$@" & }
#alias vrcl="${WEB_BROWSER} http://almanac.oremus.org/lectionary/2012.html"
#alias vvm="${WEB_BROWSER} https://ebill2.virginmedia.com/ebill2/bill-overview.jsf"
#alias web2py_start="cd ~/web2py/;python web2py.py -a 'incordeiesu' -c server.crt -k server.key -i 0.0.0.0 -p 443"
alias wgo="wget -O"
alias wstc="~/bin/wstc.pl"
wv() {
	lsb_release -a
	uname -a
	dpkg-query -W -f '${status} ${package} ${version}\n' | sed -n 's/^install ok installed //p' | grep -i $1
}
alias xhi="xrandr -s 1440x900"
alias xl="xine --loop"
alias xlo="xrandr -s 1024x768"
alias yt="youtube-dl"
alias yto="youtube-dl -o"
yov () { youtube-dl -o $1_$2.mp4 https://www.youtube.com/watch?v=$2; }
